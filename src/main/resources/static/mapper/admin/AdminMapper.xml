<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laonworks502.team1st.dao.admin.AdminDao">

 <!-- 암호화 -->
 <insert id="addAdmin" parameterType="com.laonworks502.team1st.model.admin.AdminBean">
insert into admin (id, passwd, salt)  values('admin', #{passwd}, #{salt})
 </insert>

 <!-- 관리자 로그인 아이디 가져오기 -->
 <select id="getAdminInfo" parameterType="java.lang.String" resultType="com.laonworks502.team1st.model.admin.AdminBean">
  select *
  from admin
  where id = #{id}
 </select>

 <!-- 일반회원 일별 가입자 수  -->
 <select id="joinTotalDays" parameterType="int" resultType="int">
  select count(register_date)
  from general_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} day)
 </select>

 <!-- 일반회원 주별 가입자 수 -->
 <select id="joinTotalWeeks" parameterType="int" resultType="int">
  select count(register_date)
  from general_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} week)
 </select>

 <!-- 일반회원 월별 가입자 수 -->
 <select id="joinTotalMonths" parameterType="int" resultType="int">
  select count(register_date)
  from general_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} month)
 </select>

 <!-- 기업회원 일별 가입자 수  -->
 <select id="companyJoinChartDate" parameterType="int" resultType="int">
  select count(register_date)
  from company_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} day)
 </select>

 <!-- 기업회원 주별 가입자 수 -->
 <select id="companyJoinChartWeek" parameterType="int" resultType="int">
  select count(register_date)
  from company_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} week)
 </select>

 <!-- 기업회원 월별 가입자 수 -->
 <select id="companyJoinChartMonth" parameterType="int" resultType="int">
  select count(register_date)
  from company_users
  where date_format(register_date, '%Y-%m-%d') = date_sub(DATE_FORMAT(NOW(), '%Y-%m-%d'), interval #{i} month)
 </select>

 <!-- 전체 회원 수(일반회원) -->
 <select id="countAllUsers" resultType="int">
  select count(*)
  from general_users
 </select>

 <!-- 일반 회원 리스트(탈퇴회원 제외) -->
 <select id="generalUsersList" resultType="com.laonworks502.team1st.model.users.GeneralUserBean">
  <!-- select * from general_users limit 0, 10;  -->
  /* select email, passwd, name, postal_code, address1, address2, tel1, tel2, tel3, date_format(register_date,
  '%Y-%m-%d')as register_date, resume, exit_reason
  from general_users limit 0, 20;*/
  select email, passwd, name, postal_code, address1, address2, tel1, tel2, tel3, date_format(register_date,
  '%Y-%m-%d')as register_date, resume, exit_reason
  from general_users where exit_reason is null order by name asc
 </select>

 <!-- 일반 회원 삭제 -->
 <update id="generalUserDelete" parameterType="java.lang.String">
  update general_users set exit_reason = '관리자에 의해 삭제된 회원' where email = #{email}
 </update>

 <!-- 전체 회원 수(기업회원) -->
 <select id="countAllCompanyUsers" resultType="int">
  select count(*)
  from company_users
 </select>

 <!-- 기업 회원 리스트 -->
 <select id="companyUsersList" resultType="com.laonworks502.team1st.model.users.CompanyUserBean">
  select email, passwd, company_name, name, tel1, tel2, tel3, date_format(register_date, '%Y-%m-%d')as register_date, exit_reason
  from company_users where exit_reason is null order by company_name asc
 </select>

 <!-- 기업 회원 삭제-->
 <update id="companyUserDelete" parameterType="java.lang.String">
  update company_users set exit_reason = '관리자에 의해 삭제된 회원' where email = #{email}
 </update>

 <!-- 전체 기업 수 -->
 <select id="countAllCompanies" resultType="int">
  select count(*)
  from companies
 </select>

 <!-- 기업 리스트 -->
 <select id="companyList" resultType="com.laonworks502.team1st.model.company.CompanyBean">
  /*select company_name, field, tel1, tel2, tel3, date_format(foundation_date, '%Y-%m-%d')as foundation_date
   from companies order by company_name asc*/
  select company_name, field, tel1, tel2, tel3, foundation_date
  from companies order by company_name asc
 </select>

 <!-- 정규직 게시글 갯수 구하기 -->
 <select id="countAllFulltimePosts" resultType="java.lang.Integer">
  select count(*) from posts where board_id = '100'
 </select>

 <!-- 정규직 게시물 목록 -->
 <select id="fulltimePostList" resultType="com.laonworks502.team1st.model.post.PostBean">
  /*select company_name, field, tel1, tel2, tel3, date_format(foundation_date, '%Y-%m-%d')as foundation_date
   from companies order by company_name asc*/
 /* select no, title, writerName, date, date from posts where*/
  SELECT board_id, posts.no, posts.title, posts.writer, general_users.name as writerName, posts.date
  FROM posts JOIN general_users ON posts.writer = general_users.email where board_id = '100'
 </select>

 <!-- 정규직 게시글 삭제-->
 <delete id="fulltimePostDelte" parameterType="int">
delete from posts where no = #{no}
 </delete>

<!-- 파트타임 게시글 갯수 구하기 -->
 <select id="countAllParttimePosts" resultType="java.lang.Integer">
  select count(*) from posts where board_id = '200'
 </select>

 <!-- 파트타임 게시물 목록 -->
 <select id="parttimePostList" resultType="com.laonworks502.team1st.model.post.PostBean">
  SELECT board_id, posts.no, posts.title, posts.writer, general_users.name as writerName, posts.date
  FROM posts JOIN general_users ON posts.writer = general_users.email where board_id = '200'
 </select>

 <!-- 스터디 게시글 갯수 구하기-->
 <!-- <select id="countAllStudies" resultType="java.lang.Integer">-->
<!--  select count(*) from posts where board_id = '300'-->
<!-- </select>-->


</mapper>


